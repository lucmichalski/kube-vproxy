Determining if the Q_WS_X11 exist failed with the following output:
Change Dir: /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_6219f/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_6219f.dir/build.make CMakeFiles/cmTC_6219f.dir/build
Building CXX object CMakeFiles/cmTC_6219f.dir/CheckSymbolExists.cxx.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++    -I/usr/local/Cellar/qt/4.8.7_1/include -F/usr/local/Cellar/qt/4.8.7_1/lib    -o CMakeFiles/cmTC_6219f.dir/CheckSymbolExists.cxx.o -c /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_X11'
  return ((int*)(&Q_WS_X11))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_6219f.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTC_6219f/fast] Error 2

File /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_X11
  return ((int*)(&Q_WS_X11))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the Q_WS_WIN exist failed with the following output:
Change Dir: /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_0d8fa/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_0d8fa.dir/build.make CMakeFiles/cmTC_0d8fa.dir/build
Building CXX object CMakeFiles/cmTC_0d8fa.dir/CheckSymbolExists.cxx.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++    -I/usr/local/Cellar/qt/4.8.7_1/include -F/usr/local/Cellar/qt/4.8.7_1/lib    -o CMakeFiles/cmTC_0d8fa.dir/CheckSymbolExists.cxx.o -c /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_WIN'
  return ((int*)(&Q_WS_WIN))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_0d8fa.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTC_0d8fa/fast] Error 2

File /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_WIN
  return ((int*)(&Q_WS_WIN))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the Q_WS_QWS exist failed with the following output:
Change Dir: /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_94bfd/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_94bfd.dir/build.make CMakeFiles/cmTC_94bfd.dir/build
Building CXX object CMakeFiles/cmTC_94bfd.dir/CheckSymbolExists.cxx.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++    -I/usr/local/Cellar/qt/4.8.7_1/include -F/usr/local/Cellar/qt/4.8.7_1/lib    -o CMakeFiles/cmTC_94bfd.dir/CheckSymbolExists.cxx.o -c /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_QWS'
  return ((int*)(&Q_WS_QWS))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_94bfd.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTC_94bfd/fast] Error 2

File /Users/lucmichalski/.go/src/github.com/blippar/find-object/include/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_QWS
  return ((int*)(&Q_WS_QWS))[argc];
#else
  (void)argc;
  return 0;
#endif
}

