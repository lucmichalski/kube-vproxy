/**
 * @jsx React.DOM
 */
'use strict';

var React = require('react');
var PropTypes = React.PropTypes;

var Icon = React.createClass({displayName: "Icon",

  propTypes: {
    name: PropTypes.string.isRequired,
    className: PropTypes.string,
    size: PropTypes.oneOf(['lg', '2x', '3x', '4x', '5x']),
    rotate: PropTypes.oneOf(['45', '90', '135', '180', '225', '270', '315']),
    flip: PropTypes.oneOf(['horizontal', 'vertical']),
    fixedWidth: PropTypes.bool,
    spin: PropTypes.bool,
    pulse: PropTypes.bool,
    stack: React.PropTypes.oneOf(['1x', '2x']),
    inverse: React.PropTypes.bool
  },

  render:function() {
    /*jshint eqnull:true */
    var $__0=
             
        
      this.props,name=$__0.name,size=$__0.size,rotate=$__0.rotate,flip=$__0.flip,spin=$__0.spin,fixedWidth=$__0.fixedWidth,stack=$__0.stack,inverse=$__0.inverse,pulse=$__0.pulse,className=$__0.className,props=(function(source, exclusion) {var rest = {};var hasOwn = Object.prototype.hasOwnProperty;if (source == null) {throw new TypeError();}for (var key in source) {if (hasOwn.call(source, key) && !hasOwn.call(exclusion, key)) {rest[key] = source[key];}}return rest;})($__0,{name:1,size:1,rotate:1,flip:1,spin:1,fixedWidth:1,stack:1,inverse:1,pulse:1,className:1});
    var classNames = ("fa fa-" + name);
    if (size) {
      classNames += (" fa-" + size);
    }
    if (rotate) {
      classNames += (" fa-rotate-" + rotate);
    }
    if (flip) {
      classNames += (" fa-flip-" + flip);
    }
    if (fixedWidth) {
      classNames += ' fa-fw';
    }
    if (spin) {
      classNames += ' fa-spin';
    }
    if (pulse) {
      classNames += ' fa-pulse';
    }
    
    if (stack) {
      classNames += (" fa-stack-" + stack);
    }
    if (inverse) {
      classNames += ' fa-inverse';
    }
    
    if (className) {
      classNames += (" " + className);
    }
    return React.createElement("span", React.__spread({},  props, {className: classNames}));
  }
});

module.exports = Icon;
